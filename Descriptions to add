**4. Generate and Test**

The idea behind this method is that, once a solution is found, it stops generating and does not seek to optimise unlike the other algorithms in this assignment.

For this reason, we do not expect a high success rate for "best picks".

This is a basic algorithm which follows the following process:
1. Generate a possible solution candidate.
2. Test the candidate.
  - If the candidate meets the criteria, then it is considered valid and the solution.
  - If not, alter some part of the candidate and repeat.

Criteria:
- The weight of the knapsack is within its capacity.

Alteration:
- The generator will start by having all the blocks in the knapsack and, if the candadite fails the weight capacity, generate the next heaviest arrangement of blocks.\
Eventually, the arrangement will be light enough to satisfy the weight capacity which will then be a valid solution.





**Your Analysis:**
The success of this algorithm is ~51% which means only half of the solutions are the expected "best pick". While this method guarantees a solution that satisfies our hard contraint of being within the knapsack capacity, it clearly doesn't offer a high likelyhood of obtaining an optimal solution.

Another method was explored with a different alteration of starting with all blocks, then removing blocks by random choice rather than ordered weight. This has a lower success rate of ~42%.  In comparrison, generating the next heaviest option and testing it was a more successful approach for finding the optimal solution.
